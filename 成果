from bs4 import BeautifulSoup
import requests
import webbrowser
import itertools

winning_Numbers_Sort_lotto = ['color:#FF0000; font-weight:bold','color:#FF0000; font-weight:bold','color:#FF0000; font-weight:bold','color:#FF0000; font-weight:bold','color:#FF0000; font-weight:bold','color:#FF0000; font-weight:bold','color:blue; font-weight:bold']
A=[0]*49
for i in range(49):
    A[i]=0
lotto_number = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49']
lotto_number2 = ['1', '2', '3', '4', '5', '6', '7', '8', '9']
count = [0 for i in range(49)]
chance = [0 for i in range(49)]
b = list(range(49))
cnt = 0
Sum_record = 0

def search_winning_numbers(css_class):
    global winning_Numbers_Sort_lotto
    if(css_class != None):
        for i in range(len(winning_Numbers_Sort_lotto )):
            if winning_Numbers_Sort_lotto [i] in css_class:
                return css_class    
def parse_tw_lotto_html(data_Info,number_count):  
    data_Info_List = []
    data_Info_Dict = {}
    record = int(len(data_Info))/7
    Sum = [0 for i in range(int(record))]
    tmp_index = 0
    for index  in range(len(data_Info)):
        if (index == 0):
            data_Info_List.append(data_Info[index].text)                        #第一組號碼的第一個數字
            Sum[tmp_index] = Sum[tmp_index]+int(data_Info[index].text)
            for i in range(49):
                if (data_Info[index].text == lotto_number[i]):             
                    count[i] = count[i]+1
            for i in range(9):
                if (data_Info[index].text == lotto_number2[i]):
                    count[i] = count[i]+1            
        else:
            if (index % number_count != 0):
                data_Info_List.append(data_Info[index].text)                     #第二到六的號碼加特別號
                Sum[tmp_index] = Sum[tmp_index]+int(data_Info[index].text)
                for i in range(49):
                    if (data_Info[index].text == lotto_number[i]):
                        count[i] = count[i]+1
                for i in range(9):
                    if (data_Info[index].text == lotto_number2[i]):
                        count[i] = count[i]+1
            else:
                data_Info_Dict[str(tmp_index)] = list(data_Info_List)
                data_Info_List= []
                data_Info_List.append(data_Info[index].text)                    #第一組號碼之後的第一個數字
                Sum[tmp_index] = Sum[tmp_index]+int(data_Info[index].text)
                for i in range(49):
                    if (data_Info[index].text == lotto_number[i]):
                        count[i] = count[i]+1
                for i in range(9):
                    if (data_Info[index].text == lotto_number2[i]):
                        count[i] = count[i]+1
                tmp_index = tmp_index+1
        data_Info_Dict[str(tmp_index)] = list(data_Info_List)
    #print(Sum)                                                                                  #各期數字和
    for i in range(int(record)):
        global Sum_record
        Sum_record = Sum_record + Sum[i]
    Sum_record = Sum_record/record                                              #所有期數數字和的平均
    return data_Info_List,data_Info_Dict            
data = {'p1': '093001', 'p2': '108112', 'l': '0', 'type': '1'}                      #p1:第一筆資料  p2:最後一筆資料
head_Html_lotto='http://m.9800.com.tw/statistics.asp'
res = requests.post(head_Html_lotto, data=data, timeout=30)
soup = BeautifulSoup(res.text,'lxml')
header_Info = soup.find_all(style=search_winning_numbers)
data_Info_List,data_Info_Dict  = parse_tw_lotto_html(header_Info,7)    
print(data_Info_Dict)

a = count
sum_pred = 0
rpt_chk_minimun = 0

#print(count)                                                                                    #各個號碼出現次數
for i in range(49):
    cnt = cnt + count[i]
#print(cnt)
for i in range(49):
    chance[i]=1/49-(count[i]/cnt-1/49)
print(chance)
for i in range(0,len(a)-1): 
    for j in range(0,len(a)-1-i): 
        if a[j] > a[j+1]: 
            tmp = a[j]
            a[j] = a[j+1]
            a[j+1] = tmp
            n = b[j]
            b[j] = b[j+1]
            b[j+1] = n

#print(a)                                                                                            #各個號碼出現的次數(由小到大)
#print(b)                                                                                            #各個號碼(出現的次數由小到大)

for i in range(7, 49):
    x = i
    if (a[i+1] != a[i]):
        break
for i in range(x):
    if (a[i] != a[x]):
        sum_pred = sum_pred + b[i]
        sum_cnt = i
#取前七個出現次數最少的號碼，再判斷第七個以後的號碼出現次數是否跟第七個號碼相同

rpt = [0 for i in range(x-sum_cnt)]

for i in range(len(rpt)):
    rpt[i] = b[x-i]
rpt_combi = list(itertools.combinations(rpt,6-sum_cnt))

rpt_sum = [0 for i in range(len(rpt_combi))]
rpt_chk = [0 for i in range(len(rpt_sum))]

for i in range(len(rpt_combi)):
    rpt_sum[i] = sum(rpt_combi[i])
for i in range(len(rpt_sum)):
    if (Sum_record - sum_pred > rpt_sum[i]):
        rpt_chk[i] = (Sum_record - sum_pred) - rpt_sum[i]
    else:
        rpt_chk[i] = rpt_sum[i] - (Sum_record - sum_pred)
rpt_chk_min = rpt_chk[0]
for i in range(len(rpt_chk)):
    if (rpt_chk[i] < rpt_chk_min):
        rpt_chk_min = rpt_chk[i]
        rpt_chk_minimun = i
#最少出現的次數號碼取完以後，判斷且取出重複次數相同的號碼，將數字組合並加總後找出與所有期數數字和的平均最近的號碼

pred_num = [b[i] for i in range(sum_cnt+1)] + list(rpt_combi[rpt_chk_minimun])
for i in range(len(pred_num)):
        pred_num[i] = pred_num[i] + 1
for i in range(0,len(pred_num)-1): 
        for j in range(0,len(pred_num)-1-i): 
            if pred_num[j] > pred_num[j+1]: 
                tmp = pred_num[j]
                pred_num[j] = pred_num[j+1]
                pred_num[j+1] = tmp
#將預測結果由小到大排列

print(pred_num)    
